@model IEnumerable<IndiceCuentasViewModel>
@{
    ViewData["Ttile"] = "Cuantas";

    string FormatearBalance(decimal balance)
    {
        return Math.Abs(balance).ToString();
    }
    string ObtenerClaseBalance(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";
    }

}

<h1>Cuentas</h1>

<a asp-action="Crear" class="btn btn-primary">Crear nuevo</a>

<div class="contenedor-totales mb-3">
    <div>
        <div>
            <strong>Activos</strong>
        </div>
        <div class="activo">
           @FormatearBalance(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Pasivos</strong>
        </div>
        <div class="pasivo">
            @FormatearBalance(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <strong>Total</strong>
    </div>
    <div class="total">
        @FormatearBalance(Model.Sum(x => x.Balance))
    </div>
</div>

<div class="accordion acordeon-cuentas">
    @foreach (var tipoCuenta in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="cabeceraUno">
                @{
                    var id = tipoCuenta.TipoCuenta.Replace(" ", "");
                    var dataBSTarget = "#" + id;
                    var claseTipoCuenta = ObtenerClaseBalance(tipoCuenta.Balance);
                }
                <button></button>
            </h2>
        </div>
    }

</div>




